{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","placeholder","Tasks","tasks","hideDoneTasks","map","task","done","content","id","Buttons","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAQeA,EANF,kBACT,uBAAMC,UAAU,OAAhB,UACI,uBAAOA,UAAU,cAAcC,YAAY,0BAC3C,wBAAQD,UAAU,eAAlB,+BCqBOE,G,MAxBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,cAAV,OACV,oBAAIJ,UAAU,OAAd,SACKG,EAAME,KAAI,SAAAC,GAAI,OACX,qBACIN,UAAS,qBAAgBM,EAAKC,MAAQH,EAChC,oBACA,IAHV,UAMI,wBAAQJ,UAAU,mCAAlB,SACKM,EAAKC,KAAO,SAAM,KAEvB,uBAAMP,UAAS,0BACQM,EAAKC,KAClB,0BACA,IAHV,cAGkBD,EAAKE,WAEvB,wBAAQR,UAAU,oCAAlB,4BAXiBM,EAAKG,WCUvBC,G,MAhBC,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAOC,EAAV,EAAUA,cAAV,OACZD,EAAMQ,OAAS,GACX,sBAAKX,UAAU,mBAAf,UACI,wBAAQA,UAAU,kBAAlB,SACKI,EAAgB,4BAAoB,yBAEzC,wBACIJ,UAAU,kBACVY,SAAUT,EAAMU,OAAM,qBAAGN,QAF7B,wCCMGO,G,MAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,mBAAhB,OACZ,0BAASjB,UAAU,UAAnB,UACI,yBAAQA,UAAU,kBAAlB,UACI,oBAAIA,UAAU,iBAAd,SAAgCe,IAC/BE,KAEL,8BACKD,SCDEE,G,MANA,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAH,OACX,iCACI,oBAAIf,UAAU,eAAd,SAA8Be,QCIvBI,G,MANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,sBAAMpB,UAAU,YAAhB,SACKoB,MCGHjB,EAAQ,CACZ,CAAEM,GAAI,EAAGD,QAAS,8BAAqBD,MAAM,GAC7C,CAAEE,GAAI,EAAGD,QAAS,iBAAaD,MAAM,IAuBxBc,MAlBf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQN,MAAM,qBACd,cAAC,EAAD,CACEA,MAAM,qBACNC,KAAM,cAAC,EAAD,MAGR,cAAC,EAAD,CACED,MAAM,mBACNC,KAAM,cAAC,EAAD,CAAOb,MAAOA,EAAOC,cAdb,QAeda,mBAAoB,cAAC,EAAD,CAASd,MAAOA,EAAOC,cAf7B,cCCPkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8f2992ec.chunk.js","sourcesContent":["import './style.css';\n\nconst Form = () => (\n    <form className=\"form\">\n        <input className=\"form__input\" placeholder=\"Co jest do zrobienia?\" />\n        <button className=\"form__button\">Dodaj zadanie</button>\n    </form>\n)\nexport default Form;","import \"./style.css\";\n\nconst Tasks = ({ tasks, hideDoneTasks }) => (\n    <ul className=\"list\">\n        {tasks.map(task => (\n            <li\n                className={`list__item ${task.done && hideDoneTasks\n                    ? \" list__item--hide\"\n                    : \"\"}`} key={task.id}\n            >\n\n                <button className=\"list__button list__button--done \">\n                    {task.done ? \"âœ”\" : \"\"}\n                </button>\n                <span className={\n                    `list__paragraph ${task.done\n                        ? \" list__paragraph--done \"\n                        : \"\"}`}> {task.content}\n                </span>\n                <button className=\"list__button list__button--remove\">ðŸ—‘</button>\n\n            </li>))}\n\n    </ul >\n);\n\nexport default Tasks;","import \"./style.css\";\n\nconst Buttons = ({ tasks, hideDoneTasks }) => (\n    tasks.length > 0 && (\n        <div className=\"section__buttons\">\n            <button className=\"section__button\">\n                {hideDoneTasks ? \"PokaÅ¼ ukoÅ„czone\" : \"Ukryj ukoÅ„czone\"}\n            </button>\n            <button\n                className=\"section__button\"\n                disabled={tasks.every(({ done }) => done)}\n            >\n                UkoÅ„cz wszystkie\n                </button>\n        </div>\n    )\n\n);\nexport default Buttons;","import \"./style.css\";\n\nconst Section = ({ title, body, extraHeaderContent }) => (\n    <section className=\"section\">\n        <header className=\"section__header\">\n            <h2 className=\"section__title\">{title}</h2>\n            {extraHeaderContent}\n        </header>\n        <div>\n            {body}\n        </div>\n    </section>\n);\n\nexport default Section;","import \"./style.css\";\n\nconst Header = ({ title }) => (\n    <header>\n        <h1 className=\"body__header\">{title}</h1>\n    </header>\n);\n\nexport default Header;","import \"./style.css\";\n\nconst Container = ({ children }) => (\n    <main className=\"container\">\n        {children}\n    </main>\n);\n\nexport default Container;","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\"\n\nconst tasks = [\n  { id: 1, content: \"przejÅ›Ä‡ na Reacta\", done: false },\n  { id: 2, content: \"umyÄ‡ auto\", done: true },\n];\nconst hideDoneTasks = false;\n\n\nfunction App() {\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form />}\n      />\n\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={<Tasks tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n        extraHeaderContent={<Buttons tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n      />\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}